
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.NoteAdd" Class="mr-3 mb-n1" />
            Add a new todo
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="@request.Username" Label="User Name" ReadOnly="false" />
        <MudTextField @bind-Value="@request.Password" Label="Password" ReadOnly="false" />
        <MudTextField @bind-Value="@request.FirstName" Label="First Name" ReadOnly="false" />
        <MudTextField @bind-Value="@request.LastName" Label="Last Name" ReadOnly="false" />
        <MudTextField @bind-Value="@request.Email" Label="Email" ReadOnly="false" />
        <MudTextField @bind-Value="@request.Role" Label="Role" ReadOnly="false" />

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="AddToto">Add User</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public RegisterRequest request { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void AddToto()
    {
        //In a real world scenario this bool would probably be a service to delete the item from api/database
        Snackbar.Add("User was successfully created!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(request));
    }
}